<CSS Flexible Box Layout Module>

CSS3로 버전업이 되면서 레이아웃 구현애 대한 방법으로 Flexbox가 탄생하게 되었고
2017년 현재 레이아웃을 편리하게 구현하기 위해서는 Flexbox를 사용하여 구현하는 
것이 최선이라 할 수 있습니다. 

1.Container 설정
-Flex의 설정은 대부분 Container쪽에 지정을 합니다.
  Item에 지정하는 경우는 Item별로 개별지정할 때 주로 사용됩니다.


ex1)

 <style>
       .container { display: flex }

      .container{width:500px; height: 300px; border: 2px solid #333}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
 </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
</div>


---------------------------------
*flex-direction
  -Container 안에 있는 Item을 어떤방향으로 나열할지를 지정합니다.


row                      Item을 수평방향으로 좌에서 우로 나열함 (기본값) 
row-reverse           Item을 수평방향으로 우에서 좌로 나열함 
column                 Item을 수직방향으로 상에서 하로 나열함 
column-reverse      Item을 수직방향으로 상에서 하로 나열함 


ex2) flex-direction 

 <style>
      .container { display: flex ;
           flex-direction:row-reverse}

      .container{width:500px; height: 300px; border: 2px solid #333}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
 </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
</div>

---------------------------------------
*flex-wrap
 -Container 안에 있는 Item이 Container를 넘어설 때 줄바꿈을 할지 한 줄로 표현할지에 대해 지정합니다

nowrap                 Item을 줄바꿈하지 않고 한줄에 표시함 (기본값) 
wrap                    Item이 Container을 넘어설 경우 다음줄에 줄바꿈하여 표시함 
wrap-reverse         Item이 Container을 넘어설 경우 역방향으로 줄바꿈하여 표시함 


ex3) flex-wrap

    <style>
       .container { display: flex ;
           flex-wrap: wrap;}

      .container{width:500px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
    </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
  <div class="item">item4</div>
  <div class="item">item5</div>
  <div class="item">item6</div>
  <div class="item">item7</div>
</div>

-----------------------------------------------

*flex-flow

-flex-direction과 flex-wrap를 flex-flow로 한 줄에 지정할 수 있습니다. 
첫번째 요소는 flex-direction 의 설정값을, 
두번째 요소는 flex-wrap의 설정값을 지정하면 됩니다.

ex4) flex-flow

    <style>
       .container { display: flex ;
            flex-flow: row nowrap;}

      .container{width:500px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
    </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
  <div class="item">item4</div>
  <div class="item">item5</div>
  <div class="item">item6</div>
  <div class="item">item7</div>
</div>

----------------------------------------------

*justify-content
 -Container안에 있는 Item들을 수평방향으로 정렬하는 방법을 지정합니다.


flex-start             Container안에 있는 Item들을 왼쪽으로 정렬함 (기본값) 
flex-end              Container안에 있는 Item들을 오른쪽으로 정렬함 
center                 Container안에 있는 Item들을 수평방향의 중앙에 정렬함 
space-between     Container안에 있는 Item들을 일단 양쪽끝에 붙히고 나머지 Item들을 일정간격으로 정렬함 


ex5) justify-content

    <style>
        .container { display: flex ;
           flex-flow: row wrap;    
          justify-content: center;}

      .container{width:100%; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
    </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
</div>

-------------------------------------

*align-items
 -Container안에 있는 Item들을 수직방향으로 정렬하는 방법을 지정합니다.


flex-start          Container안에 있는 Item들을 상단에 정렬함 (기본값) 
flex-end           Container안에 있는 Item들을 하단에 정렬함 
center              Container안에 있는 Item들을 수직방향의 중앙에 정렬함 
baseline            Container안에 있는 Item들을 baseline으로 정렬함 
stretch              Container안에 있는 Item들을 Container의 높이와 동일하게 상하로 늘려서 상단과 하단에 정렬함 

ex6) align-items

    <style>
        .container { display: flex ;
           flex-flow: row nowrap;    
          align-items:center;}

      .container{width:500px; height: 400px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
    </style>

<div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
</div>

---------------------------------------------
*align-content
 -Container안에 있는 Item들이 여러 줄로 표시될 때 수직방향으로 정렬하는 방법을 지정합니다. 


flex-start           Container안에 있는 여러 줄의 Item들을 모두 상단에 정렬함 (기본값) 
flex-end            Container안에 있는 여러 줄의 Item들을 모두 하단에 정렬함 
center               Container안에 있는 여러 줄의 Item들을 모두 수직방향의 중앙에 정렬함 
space-between   Container안에 있는 Item들의 줄을 일단 상단과 하단 끝에 붙히고 나머지 Item들을 일정간격으로 수직방향으로 정렬함 
space-around      Container안에 있는 Item들의 줄을 일정간격으로 수직방향으로 정렬함 
stretch               Container안에 있는 Item들의 줄의 높이를 Container의 높이와 맞게 늘려서 정렬함 


ex7) align-content

    <style>
        .container { display: flex ;
           flex-flow: row wrap;    
          align-content:center;}

      .container{width:500px; height: 400px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
    </style>

 <div class="container">
  <div class="item">item1</div>
  <div class="item">item2</div>
  <div class="item">item3</div>
  <div class="item">item4</div>
  <div class="item">item5</div>
  <div class="item">item6</div>
  <div class="item">item7</div>
  <div class="item">item8</div>
  <div class="item">item9</div>
</div>


=========================================================

2.Item 설정
 -위에는 Container에 대한 설정이라면 이제는 그 안에 있는 Item들에 대한 
  설정으로 Item의 넓이, 순서 등 Item의 개별적인 속성에 대한 설정 방법입니다.



*order
  -Container안에서 Item의 순서를 지정합니다. 음수값도 사용할 수 있으며 
   숫자가 작을 수로 왼쪽에, 클수록 오른쪽에 위치합니다.

ex8) order

    <style>
      .container { display: flex ;}

      .container{width:500px; height: 400px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
        
    .container .item-1 { order: 1; }
    .container .item-2 { order: 2; }
    .container .item-3 { order: 0; }
    .container .item-4 { order: -1; }
    </style>

<div class="container">
  <div class="item item-1">item1</div>
  <div class="item item-2">item2</div>
  <div class="item item-3">item3</div>
  <div class="item item-4">item4</div>
</div>

----------------------------------------

*flex-grow
 -각 Item의 넓이를 배수로 지정을 합니다.
   item-1의 flex-grow가 1이고 item-2의 flex-grow가 2라면
   item-2는 item-1보다 2배가 크게 됩니다. 
   기본값은 0 이며 음수는 사용하지 않습니다.

ex9) flex-grow

    <style>
      .container { display: flex ;}

      .container{width:100%; height: 400px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
        
    .container .item-1 { flex-grow: 1; }
    .container .item-2 { flex-grow: 2; }
    .container .item-3 { flex-grow: 1; }
    .container .item-4 { flex-grow: 0; }
    </style>

 <div class="container">
  <div class="item item-1">item1</div>
  <div class="item item-2">item2</div>
  <div class="item item-3">item3</div>
  <div class="item item-4">item4</div>
</div>

-------------------------------------------

*flex-shrink
 -flex-grow와 반대로 각 Item의 넓이를 배수로 빼집니다.
  item-1의 flex-grow가 1이고 item-2의 flex-grow가 2라면
  item-2는 item-1보다 2배가 작게 됩니다. 
  기본값은 1 이며 음수는 사용하지 않습니다.


----------------------------------------

*flex-basis
 -Item의 기본 크기값을 지정합니다. 

ex10)
   .container .item-1 { flex-basis: 200px; }

-----------------------------------------

*flex
 -flex-grow와 flex-shrink, flex-basis를 flex로 한 줄에 지정할 수 있습니다. 
  첫번째 요소는 flex-grow 의 설정값을, 
  두번째 요소는 flex-shrink의 설정값을, 
  세번째 요소는 flex-basis의 설정값을 지정하면 됩니다.
  기본값은 flex: 0 1 auto 입니다.

ex11)
  .container .item-1 { flex: 0 1 200px; }

----------------------------------------

*align-self
 -지정된 Item의 독자적인 수직방향 정렬을 지정합니다. 
   align-items의 속성과 동일하게 지정됩니다.


flex-start         Container안에 있는 지정된 Item을 상단에 정렬함 
flex-end          Container안에 있는 지정된 Item을 하단에 정렬함 
center             Container안에 있는 지정된 Item을 수직방향의 중앙에 정렬함 
baseline           Container안에 있는 지정된 Item을 baseline으로 정렬함 
stretch             Container안에 있는 지정된 Item을 Container의 높이와 동일하게 상하로 늘려서 상단과 하단에 정렬함 


ex12) align-self

    <style>
      .container { display: flex ;}

      .container{width:100%; height: 400px; border: 2px solid #f00}
      .item{width:100px; height:100px; background: #0f0; border: 2px solid #333}
        
        .container .item-1 { align-self: flex-end; }
        .container .item-2 { align-self: center}
        .container .item-3 { align-self: flex-start}
        .container .item-4 { height: auto;  align-self: stretch  }

    </style>

<div class="container">
  <div class="item item-1">item1</div>
  <div class="item item-2">item2</div>
  <div class="item item-3">item3</div>
  <div class="item item-4">item4</div>
</div>
























