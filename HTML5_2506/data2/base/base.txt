1. CLASS(별명) 와 ID(이름) 

1)class =>동일한 이름을 줄 수 있다.. => 그룹...

 ex1) 
      <h2 class="a1"> 첫번째 타이틀 제목입니다.</h2>
      <p> 첫번째 단락 내용 부분 입니다.</p>
      <h2 class="a1"> 두번째 타이틀 제목입니다.</h2>
      <p> 두번째 단락 내용 부분 입니다.</p>
      -------------------------
      <style type="text/css">
        p{font-size: 16px; font-family:Gulim;}
        .a1{font-weight:bold; color:red;}
      </style>

 ex2) <h2 class="a1"> 첫번째 타이틀 제목입니다.</h2>
      <p class="b1"> 첫번째 단락 내용 부분 입니다.</p>
      <h2 class="a1"> 두번째 타이틀 제목입니다.</h2>
      <p class="b1"> 두번째 <span>단락</span> 내용 부분 입니다.</p>
      <h2 class="a1"> 세번째 타이틀 제목입니다.</h2>
      <p> 세번째 단락 내용 부분 입니다.</p>
      -------------------------
      <style type="text/css">
        .a1{font-weight:bold; color:red;}
        .b1{font-size: 16px; font-family:"굴림"; color:#33F;}
      </style>

 ex3) <h2 class="a1"> 첫번째 타이틀 제목입니다.</h2>
      <p class="b1"> 첫번째 단락 내용 부분 입니다.</p>
      <h2 class="a1"> 두번째 타이틀 제목입니다.</h2>
      <p class="b1 c1"> 두번째 <span>단락</span> 내용 부분 입니다.</p>
      ------------------------
       <style type="text/css">
        .a1{font-weight:bold; color:red;}
        .b1{font-size: 16px; font-family:"굴림"; color:#33F;}
        .c1{font-weight:bold;}
      </style>

2)id =>동일한 이름을 사용할 수 없다.
  
 ex1) 
     <div id="a1">
         <h2 class="b1"> 첫번째 타이틀 제목입니다.</h2>
         <p> 첫번째 단락 내용 부분 입니다.</p>
      </div>
      <div id="a2">
         <h2 class="b1"> 두번째 타이틀 제목입니다.</h2>
         <p> 두번째 단락 내용 부분 입니다.</p>
      </div>
      -------------------------
      <style type="text/css">
        #a1{font-size: 18px; font-family:"돋움";font-weight:bold; color:red;}
        #a2{font-size: 16px; font-family:"굴림"; color:#33F;}
        .b1{font-size: 30px; color:#ccc;}
      </style>

 ex2) <div id="a1">
       <p id="b1"> 첫번째 단락 내용 부분 입니다.</p>
       <p id="b2"> 두번째 단락 내용 부분 입니다.</p>
       <p id="b3"> 세번째 단락 내용 부분 입니다.</p>
       <p id="b4"> 네번째 단락 내용 부분 입니다.</p>
      </div>
      --------------------------
      <style type="text/css">
        #a1{font-size: 16px; font-family:"돋움";font-weight:bold; color:blue;}
        #b1{font-family:"굴림"; color:#33F;}
        #b2{font-family:"굴림"; color:#538;}
        #b3{font-family:"굴림"; color:#445;}
        #b4{font-family:"굴림"; color:#999;}
      </style>

------------------------------------------------
6. 태그 타게팅 방법 

 ex1) <div>
       <h1 class="b1"> 첫번째 타이틀 제목입니다.</h1>
       <p> 첫번째 <span>단락</span> 내용 부분 입니다.</p>
      </div>
      ----------------------------------
      <style type="text/css">
         p{font-size: 16px; color:blue;}
      </style>
      ----------------------------------
      <style type="text/css">
         div p{font-size: 16px; color:blue;}
         div p span{font-style:italic; color:red;}
      </style>
      ----------------------------------
      <style type="text/css">
         p{font-size:16px; color:blue;}
         div p{font-size:20px; color:red;}
      </style>

  ex2) <div id="a1">
        <h1> 첫번째 타이틀 제목입니다.</h1>
        <p class="b1"> 첫번째 <span>단락</span> 내용 부분 입니다.</p>
        <p> 두번째 단락 내용 부분 입니다.</p>
       </div>
       ---------------------------------
       <style type="text/css">
         h1{color:blue;}
         p{font-size:16px; color:red;}
       </style>
       ---------------------------------
       <style type="text/css">
         div h1{color:blue;}
         div p.b1{font-size:16px; color:red;}
         div p.b1 span{font-style:italic; color:green;}
       </style>
       ---------------------------------
       <style type="text/css">
         div#a1 h1{color:blue;}
         p{font-size:16px; color:pink;}
         div#a1 p.b1{font-size:16px; color:red;}
         div#a1 p.b1 span{font-style:italic; color:green;}
       </style>


===================================================
2. 박스모델 (margin / padding)

 1)margin => 위/오른쪽/아래/왼쪽의 박스 바깥 여백
    
    ex) <div id="a1">
          <p>마진은 박스의 바깥 여백을 만들 수 있는 속성입니다.대부분 블록 레벨 요소들은 기본적으로 약간의
             마진값을 가지고 있습니다.
          </p>
        </div>
        -------------------------------------
        <style type="text/css">
           *{margin:0; padding:0;}
           p{margin-top:15px; margin-right:10px; margin-bottom:15px; 
             margin-left:10px; border:2px solid #f33;}
        </style> 

      *{margin:15px 10px 15px 10px;} => 이렇게 줄여 쓸 수 있다..(순서 위/오른/아래/왼쪽)
      *{margin:10px;}  =>상하좌우 모든 여백 10px

 2)padding => 위/오른쪽/아래/왼쪽의 박스 안쪽 여백

    ex) <div id="a1">
          <p>패딩은 박스의 테두리와 컨텐츠 사이의 여백을 만들 수 있는 속성입니다. 예전에 테이블 방식으로 레이아웃을
             구현 하였을때 빈셀을 이용하거나 투명한 gif이미지를 사용 했었는데 이런 방법을 사용할 필요 없이 css의
             패딩을 활용하여 보다 효과적이고 세밀한 레이아웃을 만들 수 있게 되었습니다.
          </p>
        </div>
        ----------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
           div#a1{ background-color:#F90;}
           p{ padding:10px 15px 10px 15px; border:2px solid #f33;}
        </style> 

 3)더블 마진(마진 병합)
   
    ex)<div id="a1">
          <p id="b1">마진은 박스의 바깥 여백을 만들 수 있는 속성입니다.대부분 블록 레벨 요소들은 기본적으로 약간의
             마진값을 가지고 있습니다.
          </p>
          <p id="b2">세로마진은 큰값에 작은 값이 병합되어도 가로 마진은 병합되지 않습니다. 요소간에 세로 마진은
             병합됩니다.
          </p>
        </div>
        ----------------------------------------
        <style type="text/css">
           *{margin:0; padding:0;}
           div#a1{ background-color:#F90; border:2px solid #00f;}
           p#b1{ margin:30px 20px 30px 20px; border:2px solid #f33; background-color:#FC0;}
           p#b2{ margin:30px 20px 30px 20px; border:2px solid #f33; background-color:#FC0;}
        </style> 

===========================================================
3. 이미지와 텍스트 정렬 / 배경 이미지
  
  ex1) <img> 태그에 꼭 alt="" 속성 삽입

        <img src="images/m1" alt="비전: 국민 누구나 건강하고 행복이 넘치는 희망사회 실현">
        <img src="images/m2" alt="임무: 빈곤ㆍ질병ㆍ노령 등 사회적 위험으로부터 국민을 보호하고, 일자리와
균등한 사회참여기회를 제공하며, 평생복지를 위한 생애주기별 맞춤형 보건ㆍ복지ㆍ가족 정책으로 국민의 삶의
질을 향상시킨다.">

  ex2) 이미지 텍스트 정렬1

       <div id="a1">
          <img src="images/a1.jpg" alt="" />
          <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
             이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
             위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
       </div>
       ---------------------------------
       <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; overflow:hidden;}
	   img{margin:10px 15px 10px 5px; float:left;}
	   p{margin:10px 5px 10px 0px; font-size:14px; line-height:125%;}
        </style>

   ex3) 이미지 텍스트 정렬2

      <div id="a1">
             <img src="images/a1.jpg" alt="" />
             <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
               이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
               위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
             <img src="images/a2.jpg" alt="" />
             <p>XML은 HTML에 비해 여러가지 강점이 있습니다. 특히 XML이 웹페이지에 담긴 내용인 `콘텐츠 정보'와 
                단말기 화면에 나타날 모양을 결정하는 `스타일 정보'를 분리시킬 수 있다는 점은 차세대 
                인터넷을 위한 결정적인 요소입니다. 핸드폰에 붙은 액정화면에서 텔레비전 화면에 이르기까지 다양한 단말
                장치에 비디오, 수학공식, 움직이는 2차원 글씨 등 변화무쌍한 내용을 자유롭게 보여줄 수 있기 때문입니다.</p> 
             <img src="images/a3.jpg" alt="" />
             <p>그러나 XML이 아무리 강력하다 할지라도 현재 HTML로 씌어있는 10억개가 넘는 웹페이지들을 
                하루아침에 모두 XML로 바꿀 수는 없습니다. HTML과 XML 사이에는 적잖은 차이가 있기 때문입니다. 
                그렇다고 이미 축적된 방대한 HTML 문서들을 버릴 수 없다는 이유만으로 XML로 가는 길에서 발목을 
                잡힐 수도 없습니다. 그래서 나오게 된 것이 XHTML입니다.</p>   
         </div>
         --------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; overflow:hidden;}
	   img{margin:10px 15px 10px 5px; float:left;}
	   p{margin:10px 5px 10px 0px; font-size:14px; line-height:125%;}
         </style>  

    *<div class="clear_div"></div> => 각각의 </p>태그 아래에 레이어 추가.
    *div.clear_div{clear:both;}    => css 추가.

  ex3) 전체 배경 이미지 

       <style type="text/css">
           *{margin:0; padding:0;}
	   body{background:url(images/back.jpg) left top repeat-x;}
       </style>


  ex4)<div id="a1">
            
        </div> 
       ------------------------------
        <style type="text/css">
           *{margin:0; padding:0;}
           div#a1{width:850px; height:700px; background:url(images/center.jpg) center no-repeat;}
        </style>
 
 ex5) 약도 이미지

      <img src="images/load.jpg" alt="우정사업본부 약도 : 1.지하철 1호선 종각역하차 6번출구로 나와서 
광화문방면 300m도보후 도착  2.지하철 5호선 광화문역하차, 연결지하도 광화문우체국 방면출구에 있습니다">

  ex5) 서브 타이틀 이미지

     <h3><img src="images/title1.jpg" alt="교육기간"></h3>
     <em>교육기간 :2008년 3월 17일 부터 5월 30일까지</em>
     <p>- 주5일, 1일5시간, 2개월 인턴실습 </p>

     <h3><img src="images/title2.jpg" alt="수강신청기간"></h3>
     <p><em>수강신청기간 : 2008년 2월 5일 부터 2월 29일까지</em></p>

     <h3><img src="images/title3.jpg" alt="신청방법"></h3>
     <p>경기여성e-러닝센터(<a href="www.ggw.or.kr">www.ggw.or.kr</a>)
       <strong>수강신청 --> 블랜디드 교육 --> 신청</strong></p>

==============================================
4. position 속성

  *position 속성은 4가지의 값을 가지고 있습니다.
  - static(기본값) / absolute(절대주소/스크롤 유) / fixed(절대주소/스크롤 무) / relative(상대주소)

 1)static (정적 포지셔닝)

    ex)<div id="a1">
             <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
               이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
               위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
             <p id="ps">XML은 HTML에 비해 여러가지 강점이 있습니다. 특히 XML이 웹페이지에 담긴 내용인 `콘텐츠 정보'와 
                단말기 화면에 나타날 모양을 결정하는 `스타일 정보'를 분리시킬 수 있다는 점은 차세대 
                인터넷을 위한 결정적인 요소입니다. 핸드폰에 붙은 액정화면에서 텔레비전 화면에 이르기까지 다양한 단말
                장치에 비디오, 수학공식, 움직이는 2차원 글씨 등 변화무쌍한 내용을 자유롭게 보여줄 수 있기 때문입니다.</p>
             <p>그러나 XML이 아무리 강력하다 할지라도 현재 HTML로 씌어있는 10억개가 넘는 웹페이지들을 
                하루아침에 모두 XML로 바꿀 수는 없습니다. HTML과 XML 사이에는 적잖은 차이가 있기 때문입니다. 
                그렇다고 이미 축적된 방대한 HTML 문서들을 버릴 수 없다는 이유만으로 XML로 가는 길에서 발목을 
                잡힐 수도 없습니다. 그래서 나오게 된 것이 XHTML입니다.</p>   
         </div>
         --------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; }
	   p{margin:20px 5px 20px 5px; font-size:14px; line-height:125%; border:1px solid #f00;}
	   p#ps{position:static; background-color:#FC6;}
         </style>

 2)relative(상대 포지셔닝)
    
      ex)<div id="a1">
             <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
               이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
               위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
             <p id="ps">XML은 HTML에 비해 여러가지 강점이 있습니다. 특히 XML이 웹페이지에 담긴 내용인 `콘텐츠 정보'와 
                단말기 화면에 나타날 모양을 결정하는 `스타일 정보'를 분리시킬 수 있다는 점은 차세대 
                인터넷을 위한 결정적인 요소입니다. 핸드폰에 붙은 액정화면에서 텔레비전 화면에 이르기까지 다양한 단말
                장치에 비디오, 수학공식, 움직이는 2차원 글씨 등 변화무쌍한 내용을 자유롭게 보여줄 수 있기 때문입니다.</p>
             <p>그러나 XML이 아무리 강력하다 할지라도 현재 HTML로 씌어있는 10억개가 넘는 웹페이지들을 
                하루아침에 모두 XML로 바꿀 수는 없습니다. HTML과 XML 사이에는 적잖은 차이가 있기 때문입니다. 
                그렇다고 이미 축적된 방대한 HTML 문서들을 버릴 수 없다는 이유만으로 XML로 가는 길에서 발목을 
                잡힐 수도 없습니다. 그래서 나오게 된 것이 XHTML입니다.</p>   
         </div>
         --------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; }
	   p{margin:20px 5px 20px 5px; font-size:14px; line-height:125%; border:1px solid #f00;}
	   p#ps{position:relative; top:30px; left:30px; background-color:#FC6;}
         </style>

 3)absolute(절대 포지셔닝)

      ex)<div id="a1">
             <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
               이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
               위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
             <p id="ps">XML은 HTML에 비해 여러가지 강점이 있습니다. 특히 XML이 웹페이지에 담긴 내용인 `콘텐츠 정보'와 
                단말기 화면에 나타날 모양을 결정하는 `스타일 정보'를 분리시킬 수 있다는 점은 차세대 
                인터넷을 위한 결정적인 요소입니다. 핸드폰에 붙은 액정화면에서 텔레비전 화면에 이르기까지 다양한 단말
                장치에 비디오, 수학공식, 움직이는 2차원 글씨 등 변화무쌍한 내용을 자유롭게 보여줄 수 있기 때문입니다.</p>
             <p>그러나 XML이 아무리 강력하다 할지라도 현재 HTML로 씌어있는 10억개가 넘는 웹페이지들을 
                하루아침에 모두 XML로 바꿀 수는 없습니다. HTML과 XML 사이에는 적잖은 차이가 있기 때문입니다. 
                그렇다고 이미 축적된 방대한 HTML 문서들을 버릴 수 없다는 이유만으로 XML로 가는 길에서 발목을 
                잡힐 수도 없습니다. 그래서 나오게 된 것이 XHTML입니다.</p>   
         </div>
         --------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; }
	   p{margin:20px 5px 20px 5px; font-size:14px; line-height:125%; border:1px solid #f00;}
	   p#ps{position:absolute; top:30px; left:30px; background-color:#FC6;}
         </style>

 3)fixed(고정 포지셔닝)

      ex)<div id="a1">
             <p>인터넷 표준기관인 W3C(www.w3c.org)는 XHTML 1.0이란 새로운 표준을 내놓았습니다. 
               이는 웹페이지를 만드는 데 가장 많이 쓰이는 언어인 HTML이 차세대 언어 XML로 가기 
               위한 다리가 된다는 점에서 커다란 의미를 지닙니다.</p> 
             <p id="ps">XML은 HTML에 비해 여러가지 강점이 있습니다. 특히 XML이 웹페이지에 담긴 내용인 `콘텐츠 정보'와 
                단말기 화면에 나타날 모양을 결정하는 `스타일 정보'를 분리시킬 수 있다는 점은 차세대 
                인터넷을 위한 결정적인 요소입니다. 핸드폰에 붙은 액정화면에서 텔레비전 화면에 이르기까지 다양한 단말
                장치에 비디오, 수학공식, 움직이는 2차원 글씨 등 변화무쌍한 내용을 자유롭게 보여줄 수 있기 때문입니다.</p>
             <p>그러나 XML이 아무리 강력하다 할지라도 현재 HTML로 씌어있는 10억개가 넘는 웹페이지들을 
                하루아침에 모두 XML로 바꿀 수는 없습니다. HTML과 XML 사이에는 적잖은 차이가 있기 때문입니다. 
                그렇다고 이미 축적된 방대한 HTML 문서들을 버릴 수 없다는 이유만으로 XML로 가는 길에서 발목을 
                잡힐 수도 없습니다. 그래서 나오게 된 것이 XHTML입니다.</p>   
         </div>
         --------------------------------
         <style type="text/css">
           *{margin:0; padding:0;}
	   div#a1{width:850px; }
	   p{margin:20px 5px 20px 5px; font-size:14px; line-height:125%; border:1px solid #f00;}
	   p#ps{position:fixed; top:30px; left:30px; background-color:#FC6;}
         </style> 
